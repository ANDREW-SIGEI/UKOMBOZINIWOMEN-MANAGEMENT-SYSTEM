# Generated by Django 5.2 on 2025-04-25 15:54

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('meeting_type', models.CharField(choices=[('GROUP', 'Group Meeting'), ('FIELD_VISIT', 'Field Visit'), ('TRAINING', 'Training Session'), ('COMMITTEE', 'Committee Meeting'), ('GENERAL', 'General Meeting'), ('OTHER', 'Other')], default='GROUP', max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('scheduled_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('RESCHEDULED', 'Rescheduled'), ('POSTPONED', 'Postponed')], default='SCHEDULED', max_length=20)),
                ('recurrence', models.CharField(choices=[('NONE', 'None'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('BIWEEKLY', 'Bi-weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly')], default='NONE', max_length=20)),
                ('next_meeting_date', models.DateField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('agenda', models.TextField(blank=True, null=True)),
                ('minutes', models.TextField(blank=True, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('field_officers', models.ManyToManyField(blank=True, related_name='meetings', to='user_management.fieldofficer')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_meetings', to='user_management.group')),
                ('members', models.ManyToManyField(blank=True, related_name='meetings', to='user_management.member')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_meetings', to=settings.AUTH_USER_MODEL)),
                ('previous_meeting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_meetings', to='dashboard.meeting')),
            ],
            options={
                'ordering': ['-scheduled_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='MeetingAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_present', models.BooleanField(default=False)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('departure_time', models.TimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('field_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user_management.fieldofficer')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='dashboard.meeting')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user_management.member')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('meeting', 'field_officer'), ('meeting', 'member')},
            },
        ),
    ]
