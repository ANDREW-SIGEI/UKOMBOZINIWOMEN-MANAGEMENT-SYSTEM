/*!
 * FullCalendar v5.10.0 - Simplified for Ukombozini Women Management System
 * This is a simplified mock version of FullCalendar
 */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.FullCalendar = {}));
}(this, function (exports) { 'use strict';

  // Simplified FullCalendar implementation
  var Calendar = function(el, options) {
    this.el = el;
    this.options = options || {};
    this.events = options.events || [];
  };

  Calendar.prototype.render = function() {
    var self = this;
    var container = document.getElementById(this.el.id);
    container.innerHTML = '<div class="fc-header-toolbar fc-toolbar">' +
      '<div class="fc-toolbar-chunk">' +
      '<div class="fc-button-group">' +
      '<button type="button" class="fc-prev-button fc-button fc-button-primary" aria-label="prev"><span class="fc-icon">«</span></button>' +
      '<button type="button" class="fc-next-button fc-button fc-button-primary" aria-label="next"><span class="fc-icon">»</span></button>' +
      '<button type="button" class="fc-today-button fc-button fc-button-primary">today</button>' +
      '</div>' +
      '</div>' +
      '<div class="fc-toolbar-chunk">' +
      '<h2 class="fc-toolbar-title">' + this._getMonthTitle() + '</h2>' +
      '</div>' +
      '<div class="fc-toolbar-chunk">' +
      '<div class="fc-button-group">' +
      '<button type="button" class="fc-dayGridMonth-button fc-button fc-button-primary fc-button-active">month</button>' +
      '<button type="button" class="fc-timeGridWeek-button fc-button fc-button-primary">week</button>' +
      '<button type="button" class="fc-timeGridDay-button fc-button fc-button-primary">day</button>' +
      '<button type="button" class="fc-listMonth-button fc-button fc-button-primary">list</button>' +
      '</div>' +
      '</div>' +
      '</div>' +
      this._renderCalendarGrid();

    // Add event listeners
    var prevButton = container.querySelector('.fc-prev-button');
    var nextButton = container.querySelector('.fc-next-button');
    var todayButton = container.querySelector('.fc-today-button');
    
    prevButton.addEventListener('click', function() {
      alert('Previous month clicked - This is a simplified calendar');
    });
    
    nextButton.addEventListener('click', function() {
      alert('Next month clicked - This is a simplified calendar');
    });
    
    todayButton.addEventListener('click', function() {
      alert('Today clicked - This is a simplified calendar');
    });
    
    // Add event click handlers
    var eventElements = container.querySelectorAll('.fc-event');
    eventElements.forEach(function(eventEl) {
      eventEl.addEventListener('click', function() {
        var eventId = eventEl.getAttribute('data-event-id');
        if (self.options.eventClick && typeof self.options.eventClick === 'function') {
          self.options.eventClick({
            event: { id: eventId }
          });
        }
      });
    });
  };

  Calendar.prototype._getMonthTitle = function() {
    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    var now = new Date();
    return months[now.getMonth()] + ' ' + now.getFullYear();
  };

  Calendar.prototype._renderCalendarGrid = function() {
    var html = '<div class="fc-view-harness">' +
      '<div class="fc-daygrid">' +
      '<div class="fc-daygrid-body">' +
      '<table class="fc-scrollgrid-sync-table" style="width: 100%;">' +
      '<thead><tr>' +
      '<th class="fc-col-header-cell">Sun</th>' +
      '<th class="fc-col-header-cell">Mon</th>' +
      '<th class="fc-col-header-cell">Tue</th>' +
      '<th class="fc-col-header-cell">Wed</th>' +
      '<th class="fc-col-header-cell">Thu</th>' +
      '<th class="fc-col-header-cell">Fri</th>' +
      '<th class="fc-col-header-cell">Sat</th>' +
      '</tr></thead>' +
      '<tbody>';
    
    // Get current month's days
    var now = new Date();
    var year = now.getFullYear();
    var month = now.getMonth();
    var firstDay = new Date(year, month, 1).getDay();
    var daysInMonth = new Date(year, month + 1, 0).getDate();
    
    let date = 1;
    // Create calendar rows
    for (let i = 0; i < 6; i++) {
      html += '<tr>';
      
      // Create calendar cells
      for (let j = 0; j < 7; j++) {
        if (i === 0 && j < firstDay) {
          html += '<td class="fc-daygrid-day fc-day-other"></td>';
        } else if (date > daysInMonth) {
          html += '<td class="fc-daygrid-day fc-day-other"></td>';
        } else {
          html += '<td class="fc-daygrid-day">' +
            '<div class="fc-daygrid-day-frame">' +
            '<div class="fc-daygrid-day-top">' +
            '<a class="fc-daygrid-day-number">' + date + '</a>' +
            '</div>' +
            '<div class="fc-daygrid-day-events">' +
            this._renderEventsForDay(year, month, date) +
            '</div>' +
            '</div>' +
            '</td>';
          date++;
        }
      }
      
      html += '</tr>';
      if (date > daysInMonth) {
        break;
      }
    }
    
    html += '</tbody></table></div></div></div>';
    return html;
  };

  Calendar.prototype._renderEventsForDay = function(year, month, day) {
    var html = '';
    var dateStr = year + '-' + (month + 1).toString().padStart(2, '0') + '-' + day.toString().padStart(2, '0');
    
    this.events.forEach(function(event) {
      if (!event.start) return;
      
      var eventDate = event.start.split('T')[0];
      if (eventDate === dateStr) {
        html += '<div class="fc-daygrid-event-harness">' +
          '<a class="fc-event fc-h-event" style="background-color:' + (event.color || '#3788d8') + '" data-event-id="' + event.id + '">' +
          '<div class="fc-event-main">' + event.title + '</div>' +
          '</a>' +
          '</div>';
      }
    });
    
    return html;
  };

  exports.Calendar = Calendar;
  
  Object.defineProperty(exports, '__esModule', { value: true });

})); 